#include <stdio.h>

#define MAX_PROCESSES 100

struct Process {
    int arrival_time;
    int burst_time;
    int waiting_time;
    int turnaround_time;
};

int main() {
    struct Process processes[MAX_PROCESSES];
    int num_processes;

    
    printf("Enter the number of processes: ");
    scanf("%d", &num_processes);

    printf("Enter the arrival times and burst times of the processes:\n");
    for (int i = 0; i < num_processes; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d %d", &processes[i].arrival_time, &processes[i].burst_time);
    }

    
    int current_time = 0;
    for (int i = 0; i < num_processes; i++) {
        
        processes[i].waiting_time = current_time - processes[i].arrival_time;
        if (processes[i].waiting_time < 0) {
            processes[i].waiting_time = 0;
        }

        
        processes[i].turnaround_time = processes[i].waiting_time + processes[i].burst_time;

        
        current_time += processes[i].burst_time;
    }

    
    double total_waiting_time = 0.0;
    double total_turnaround_time = 0.0;
    for (int i = 0; i < num_processes; i++) {
        total_waiting_time += processes[i].waiting_time;
        total_turnaround_time += processes[i].turnaround_time;
    }
    double avg_waiting_time = total_waiting_time / (double) num_processes;
    double avg_turnaround_time = total_turnaround_time / (double) num_processes;

    
    printf("Average waiting time: %.2lf\n", avg_waiting_time);
    printf("Average turnaround time: %.2lf\n", avg_turnaround_time);

    return 0;
}
